[tool.poetry]
name = "statusch_backend"
version = "0.1.0"
description = ""
authors = ["devteam", "HA5KFU <ha5kfu@simonyi.bme.hu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
Django = "2.0.12"
djangorestframework = "3.9.1"
requests = "2.20.0"
django-solo = "1.1.3"
gunicorn = "19.7.1"
psycopg2-binary = "^2"

[tool.poetry.dev-dependencies]
flake8 = "3.4.1"
pip-tools = "1.10.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = ["E", "F", "W", "DJ"]
ignore = ["E402", "E501", "F403", "F401", "F405"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".mypy_cache", ".nox", ".pants.d", ".pytype",
    ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules",
    "venv", "mibs"
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8
target-version = "py38"

[tool.isort]
profile = 'black'
include_trailing_comma = false
multi_line_output = 2
known_third_party = ["django"]
known_first_party = ["common", "laundry_room", "statusch"]
skip = "migrations"